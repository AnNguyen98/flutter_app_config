# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Deploy development app to firebase"
  lane :development do
    if is_ci 
      deploy_to_firebase(env: "development")
    end
  end

  desc "Deploy staging app to firebase"
  lane :staging do
    if is_ci 
      deploy_to_firebase(env: "staging")
    end
  end

  desc "Deploy production app to firebase"
  lane :production do
    if is_ci 
      deploy_to_firebase(env: "production")
    end
  end
end

desc "Lane for distributing app using Firebase App Distributions"
private_lane :deploy_to_firebase do |options|
  apk_info = get_apk_info(env: options[:env])

  apk_path = apk_info[:apk_path]
  last_git_commit = last_git_commit()
  build_number = apk_info[:build_number]
  release_note = "Commit: #{last_git_commit[:commit_hash]}\n" \
                "Message: #{last_git_commit[:message]}\n" \
                "Build: #{build_number}"

  # gradle(task: "clean assembleRelease")

  firebase_app_distribution(
    service_credentials_file: "#{Dir.pwd}/certs/firebase_credentials.json",
    app: "1:266579256539:android:1f0abd3b36b34957a798fe", # ENV['FIREBASE_APP_ID'],
    release_notes: release_note,
    groups: "qa, testers",
    android_artifact_path: apk_path
  )   
end

desc "Get apk infomation"
private_lane :get_apk_info do |options|
  env = options[:env]
  output_path = "../../build/app/outputs/apk/#{env}/release"
  apk_path = "../build/app/outputs/apk/#{env}/release"
  file = File.read("#{output_path}/output-metadata.json")
  apk_info = JSON.parse(file)["elements"][0]

  {
    apk_path: "#{apk_path}/#{apk_info["outputFile"]}",
    build_number: "#{apk_info["versionCode"]}",
  }
end

# desc "Publish a new release into Github"
# lane :release_git do
#   set_github_release(
#     api_token: GIT_AUTHORIZATION,
#     repository_name: REPOSITORY_NAME,
#     name: "#{type.capitalize} version v#{version}",
#     tag_name: "v#{version}",
#     description: comments,
#     commitish: "main"
#   )
# end